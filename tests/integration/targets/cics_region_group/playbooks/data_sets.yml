# (c) Copyright IBM Corp. 2023
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)
---
- name: Data sets

  hosts: "all"
  gather_facts: false
  vars:
    region_dataset_path: "ANSIBIT.CICS.TESTS.{{ cics_test_area_absent }}"

  module_defaults:
    group/ibm.ibm_zos_cics.region_group:
      cics_data_sets:
        sdfhload: "{{ cics_steplib }}"
      region_data_sets:
        template: "{{ region_dataset_path }}.<< data_set_name >>"

  tasks:
    # #############################################################################
    # ############################## Initial cleanup ##############################
    # #############################################################################

    - name: Delete global catalog data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHGCD"
        state: absent
      register: delete_result_glo
      retries: 3
      until: delete_result_glo is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_glo.failed == false

    - name: Delete local catalog data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHLCD"
        state: absent
      register: delete_result_loc
      retries: 3
      until: delete_result_loc is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_loc.failed == false

    - name: Delete Local Request Queue data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHLRQ"
        state: absent
      register: delete_result_lrq
      retries: 3
      until: delete_result_lrq is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_lrq.failed == false

    # #############################################################################
    # ############################## Module Testing ###############################
    # #############################################################################

    - name: Run Global Catalog module with Initial target state
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_cics.global_catalog:
        state: "initial"
      register: initial_result_glo
      ignore_errors: true

    - name: Assert Failed for python 2.7
      when: ansible_version.minor <= 11
      ansible.builtin.assert:
        that:
          - initial_result_glo.failed is true
          - initial_result_glo.changed is false
          - initial_result_glo.msg == 'region_data_sets required'

    - name: Assert Created
      when: ansible_version.minor > 11
      ansible.builtin.assert:
        that:
          - initial_result_glo.failed is false
          - initial_result_glo.changed is true

          - initial_result_glo.start_state.exists == false
          - initial_result_glo.start_state.autostart_override == ''
          - initial_result_glo.start_state.next_start == ''

          - initial_result_glo.end_state.exists == true
          - initial_result_glo.end_state.autostart_override == 'AUTOINIT'
          - initial_result_glo.end_state.next_start == 'UNKNOWN'

    - name: Run Local Catalog module with Initial target state
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_cics.local_catalog:
        state: "initial"
      register: initial_result_loc
      ignore_errors: true

    - name: Assert Failed for python 2.7
      when: ansible_version.minor <= 11
      ansible.builtin.assert:
        that:
          - initial_result_loc.failed is true
          - initial_result_loc.changed is false
          - initial_result_loc.msg == 'region_data_sets required'

    - name: Assert Created
      when: ansible_version.minor > 11
      ansible.builtin.assert:
        that:
          - initial_result_loc.failed is false
          - initial_result_loc.changed is true

          - initial_result_loc.start_state.exists == false
          - initial_result_loc.start_state.vsam == false

          - initial_result_loc.end_state.exists == true
          - initial_result_loc.end_state.vsam == true

    - name: Run Local Request Queue module with Initial target state
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_cics.local_request_queue:
        state: "initial"
      register: initial_result_lrq
      ignore_errors: true

    - name: Debug
      ansible.builtin.debug:
        msg: "{{ initial_result_lrq }}"

    - name: Assert Failed for python 2.7
      when: ansible_version.minor <= 11
      ansible.builtin.assert:
        that:
          - initial_result_lrq.failed is true
          - initial_result_lrq.changed is false
          - initial_result_lrq.msg == 'region_data_sets required'

    - name: Assert Created
      when: ansible_version.minor > 11
      ansible.builtin.assert:
        that:
          - initial_result_lrq.failed is false
          - initial_result_lrq.changed is true

          - initial_result_lrq.start_state.exists == false
          - initial_result_lrq.start_state.vsam == false

          - initial_result_lrq.end_state.exists == true
          - initial_result_lrq.end_state.vsam == true


    # #############################################################################
    # ################################## Cleanup ##################################
    # #############################################################################

    - name: Delete global catalog data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHGCD"
        state: absent
      register: delete_result_glo
      retries: 3
      until: delete_result_glo is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_glo.failed == false

    - name: Delete local catalog data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHLCD"
        state: absent
      register: delete_result_loc
      retries: 3
      until: delete_result_loc is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_loc.failed == false

    - name: Delete Local Request Queue data set if it exists
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ region_dataset_path }}.DFHLRQ"
        state: absent
      register: delete_result_lrq
      retries: 3
      until: delete_result_lrq is not failed

    - name: Assert Delete Passed
      ansible.builtin.assert:
        that:
          - delete_result_lrq.failed == false
