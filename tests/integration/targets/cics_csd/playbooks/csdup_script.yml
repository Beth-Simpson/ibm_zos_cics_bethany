# (c) Copyright IBM Corp. 2024
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)
---
- name: Test CSDUP script for csd module

  hosts: "all"
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    data_set_name: "DFHCSD"
    data_set_path: "{{ region_data_set_path }}.{{ data_set_name }}"
    script_data_set_path: "{{ region_data_set_path }}.CSDUP"
    script_uss_path: "{{ uss_path }}/script.csdup"
    script_local_path: "{{ playbook_dir }}/script.csdup"

  module_defaults:
    ibm.ibm_zos_cics.csd:
      cics_data_sets:
        template: "{{ cics_install_path }}.<< lib_name >>"
      region_data_sets:
        template: "{{ region_data_set_path }}.<< data_set_name >>"

  tasks:
    # #############################################################################
    # ############################## Initial Cleanup ##############################
    # #############################################################################

    - name: Delete {{ data_set_name }}
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ data_set_path }}"
        state: absent
      register: result
      retries: 3
      until: result is not failed

    - name: Delete {{ script_data_set_path }}
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ script_data_set_path }}"
        state: absent
      register: result
      retries: 3
      until: result is not failed

    - name: Delete {{ script_uss_path }}
      ansible.builtin.file:
        path: "{{ script_uss_path }}"
        state: absent

    # #############################################################################
    # ############################## Module Testing ###############################
    # #############################################################################

    - name: Wrap test in block so cleanup always runs
      block:
        - name: Run csd module with initial state
          ibm.ibm_zos_cics.csd:
            state: "initial"
          register: result
        - name: Debug
          ansible.builtin.debug:
            msg: "{{ result }}"

        - name: Assert {{ data_set_name }} created
          ansible.builtin.assert:
            that:
              - result.failed == false
              - result.changed == true
              - result.start_state.exists == false
              - result.end_state.exists == true

        # #############################################################################

        - name: Create a data set with a script in it
          ibm.ibm_zos_core.zos_copy:
            content: "VERIFY"
            dest: "{{ script_data_set_path }}"
            dest_data_set:
              type: "SEQ"
              record_format: "FB"
          register: result
          retries: 3
          until: result is not failed

        - name: Run csd module with a DFHCSDUP script from a data set
          ibm.ibm_zos_cics.csd:
            state: "script"
            script_src: "{{ script_data_set_path }}"
            script_location: "DATA_SET"
          register: result
        - name: Debug
          ansible.builtin.debug:
            msg: "{{ result }}"

        - name: Assert script was run
          ansible.builtin.assert:
            that:
              - result.failed == false
              - result.changed == true
              - result.executions|select("search", "VERIFY COMMAND EXECUTED SUCCESSFULLY")

        # #############################################################################

        - name: Create a USS file with a script in it
          ansible.builtin.shell: |
            mkdir -p {{ uss_path }}
            echo "VERIFY" > {{ script_uss_path }}
          changed_when: true

        - name: Run csd module with a DFHCSDUP script from a USS file
          ibm.ibm_zos_cics.csd:
            state: "script"
            script_src: "{{ script_uss_path }}"
            script_location: "USS"
          register: result
        - name: Debug
          ansible.builtin.debug:
            msg: "{{ result }}"

        - name: Assert script was run
          ansible.builtin.assert:
            that:
              - result.failed == false
              - result.changed == true
              - result.executions|select("search", "VERIFY COMMAND EXECUTED SUCCESSFULLY")

        # #############################################################################

        - name: Run csd module with a DFHCSDUP script from a local file
          ibm.ibm_zos_cics.csd:
            state: "script"
            script_src: "{{ script_local_path }}"
            script_location: "LOCAL"
          register: result
          ignore_errors: true
        - name: Debug
          ansible.builtin.debug:
            msg: "{{ result }}"

        - name: Assert script was run
          ansible.builtin.assert:
            that:
              - result.failed == true
              - result.changed == false
              - 'result.msg == "script_location: LOCAL not supported in this beta."'

        # #############################################################################
        # ################################## Cleanup ##################################
        # #############################################################################

      always:
        - name: Delete {{ data_set_name }}
          ibm.ibm_zos_core.zos_data_set:
            name: "{{ data_set_path }}"
            state: absent
          register: result
          retries: 3
          until: result is changed

        - name: Delete {{ script_data_set_path }}
          ibm.ibm_zos_core.zos_data_set:
            name: "{{ script_data_set_path }}"
            state: absent
          register: result
          retries: 3
          until: result is changed

        - name: Delete {{ script_uss_path }}
          ansible.builtin.file:
            path: "{{ script_uss_path }}"
            state: absent
