---
- name: Provision CICS Catalogs
  hosts: zos
  gather_facts: false
  environment: "{{ environment_vars }}"
  module_defaults:
    group/ibm.ibm_zos_cics.region_group:
      state: absent
      cics_data_sets:
          sdfhload: ANTZ.CICS.TS.DEV.INTEGRAT.SDFHLOAD
      region_data_sets:
          template: "{{ ansible_user }}.REGIONS.DEMO.<< data_set_name >>"
      region_data_set_path: "{{ ansible_user }}.REGIONS.DEMO.<< data_set_name >>"

  tasks:
    - name: Create a CICS Global Catalog
      ibm.ibm_zos_cics.global_catalog:
      register: global_catalog_result
    - name: Log output of Global Catalog
      ansible.builtin.debug:
        msg: "{{ global_catalog_result  }}"
    - name: Create a CICS Local Catalog
      ibm.ibm_zos_cics.local_catalog:
      register: local_catalog_result
    - name: Log output of Local Catalog
      ansible.builtin.debug:
        msg: "{{ local_catalog_result  }}"
    - name: trace
      ibm.ibm_zos_cics.trace:
      register: trace_result
    - name: Log output of trace
      ansible.builtin.debug:
        msg: "{{ trace_result  }}"
    - name: trace B
      ibm.ibm_zos_cics.trace:
        destination: B
      register: traceB_result
    - name: Log output of traceB
      ansible.builtin.debug:
        msg: "{{ traceB_result  }}"
    - name: csd
      ibm.ibm_zos_cics.csd:
      register: csd_result
    - name: Log output of trace
      ansible.builtin.debug:
        msg: "{{ csd_result  }}"
    - name: lrq
      ibm.ibm_zos_cics.local_request_queue:
      register: lrq_result
    - name: Log output of lrq
      ansible.builtin.debug:
        msg: "{{ lrq_result  }}"
    - name: intra
      ibm.ibm_zos_cics.intrapartition:
      register: intra_result
    - name: Log output of intra
      ansible.builtin.debug:
        msg: "{{ intra_result  }}"
    - name: tmp
      ibm.ibm_zos_cics.auxiliary_temp:
      register: tmp_result
    - name: Log output of tmp
      ansible.builtin.debug:
        msg: "{{ tmp_result  }}"
    - name: dump
      ibm.ibm_zos_cics.transaction_dump:
      register: dump_result
    - name: Log output of dump
      ansible.builtin.debug:
        msg: "{{ dump_result  }}"
    - name: dump
      ibm.ibm_zos_cics.transaction_dump:
        destination: B
      register: dumpB_result
    - name: Log output of dumpB
      ansible.builtin.debug:
        msg: "{{ dumpB_result  }}"
    - name: Run DFHSIP
      ibm.ibm_zos_cics.start_cics:
        submit_jcl: true
        applid: '{{ applid }}'
        job_parameters:
          msgclass: A
          class: A
          region: 0M
          memlimit: 10G
        cics_data_sets:
          template: "{{ cics_install_path }}.<< lib_name >>"
        le_data_sets:
          template: "{{ le_path }}.<< lib_name >>"
        region_data_sets:
          template: '{{ region_data_set_path }}'
        output_data_sets:
          default_sysout_class: A
        sit_parameters:
          start: COLD
          sit: 6$
          aicons: AUTO
          auxtr: "ON"
          auxtrsw: ALL
          cicssvc: 217
          csdrecov: BACKOUTONLY
          edsalim: 500M
          grplist: (DFHLIST,DFHTERML)
          gmtext: '''Welcome {{ ansible_user }}, CICS Region {{ cics_applid }}'''
          icvr: 20000
          isc: "YES"
          ircstrt: "YES"
          mxt: 500
          pgaipgm: ACTIVE
          sec: "YES"
          spool: "YES"
          srbsvc: 218
          tcpip: "NO"
          wlmhealth: "OFF"
          wrkarea: 2048
          sysidnt: ZPY1
    # wait here
    - name: "Stop CICS"
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_cics.stop_cics:
        job_name: IYK2ZPY1
        immediate: False
      register: result
      